#!/bin/bash

#
# Script:  wg.tftpl
# Purpose: Terraform template file to install wireguard, generate keys and config
# Author:  Ed Randall, December 2023
#

EXT_IP=$(curl http://checkip.amazonaws.com)

export DEBIAN_FRONTEND=noninteractive
apt update && apt upgrade -y
apt install wireguard wireguard-tools net-tools resolvconf -y
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
echo 1 > /proc/sys/net/ipv4/ip_forward

WG_INT=$(ip -o -4 route show to default | awk '{print $5}')

cat << EOC > /etc/wireguard/wg0.conf
[Interface]
## Private IP address for the wg0 interface ##
Address = 192.168.123.100/32

## VPN server listening port ##
ListenPort = ${wireguard_port}

## Peer1 ("VPN Server") private key ##
PrivateKey = ${p1_private_key}

## Firewall rules ##
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o $WG_INT -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o $WG_INT -j MASQUERADE

[Peer]
# Peer2 ("VPN Client") Public key 
PublicKey = ${p2_public_key}

# Allowed IPs that this peer can access through the VPN
AllowedIPs = 192.168.123.100/24

# Persistent keepalive interval in seconds (helps in maintaining the connection)
PersistentKeepalive = 30

# Preshared key for extra security layer
PresharedKey = ${wg_ps_key}
EOC

sudo chmod -R 600 /etc/wireguard/
sudo systemctl enable wg-quick@wg0
sudo systemctl start wg-quick@wg0

EOF
